package net.bobs.own.ezmenu.meals.db;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import net.bobs.own.db.h2.db.AutoGeneratedKeysList;
import net.bobs.own.db.h2.db.AutoGeneratedKeysResult;
import net.bobs.own.db.h2.exceptions.NoPreferenceException;
import net.bobs.own.db.h2.pool.H2Database;
import net.bobs.own.db.rundml.exception.ExceptionMessageDialogUtility;
import net.bobs.own.db.rundml.exception.RunDMLException;
import net.bobs.own.db.rundml.mapper.AbstractTableMapper;
import net.bobs.own.db.rundml.mapper.ITable;

public class EzMenuMealIngredientMapper extends AbstractTableMapper {

	static private Logger logger = LogManager.getLogger(EzMenuMealIngredientMapper.class.getName());

	public EzMenuMealIngredientMapper(H2Database db) {
		super(db);
	}
	
	private EzMenuMealIngredientMapper(H2Database db,String dbName, String creator, String tbName) {
		super(db);
	}
	
	@Override
	public List<ITable> select() throws RunDMLException {
		
		final String SELECT_INGREDIENTS = "select meal_id, "				+
				"ingred_id, ingredient,quantity,unit_of_measure "		+ 
				"from ezmenu.ingredients "									
//				"where meal_id = ?"	
		;		
		ArrayList<ITable>  mealIngredientList = new ArrayList<ITable>();
		
		try {
		      Connection conn = db.getConnection();
   			db.setSQL(conn,SELECT_INGREDIENTS);
   			ResultSet rs = db.executeQuery();
   			while (rs.next()) {
   				
   				int mealId= rs.getInt(1);
   				long ingredId = rs.getLong(2);
   				String ingredient = rs.getString(3);
   				String quantity = rs.getString(4);
   				String unitOfMeasure = rs.getString(5);
   
   				EzMenuMealIngredient mealIngredient = new EzMenuMealIngredient(mealId, ingredId, ingredient,quantity,
   						unitOfMeasure);
   				mealIngredientList.add(mealIngredient);				
   
   			}
   			rs.close();
   			db.reset(conn);
		} catch (SQLException | NoPreferenceException ex) {
			RunDMLException rdex = new RunDMLException(ex);
			ExceptionMessageDialogUtility.openExceptionMessageDialog(rdex);
			logger.error(ex.getMessage(), ex);
			throw rdex;
		}
		
		return mealIngredientList;

	}

	@Override
	public List<ITable> selectById(int id) throws RunDMLException {

		final String SELECT_BYMEALS = "select meal_id, ingred_id, ingredient, quantity, unit_of_measure "
				+	"from ezmenu.ingredients "
				+	"where meal_id = ?"
		;
		ArrayList<ITable>  mealIngredientList = new ArrayList<ITable>();
		
		try {
	         Connection conn = db.getConnection();
   			db.setSQL(conn,SELECT_BYMEALS);
   			db.setInt(1, id);
   			ResultSet rs = db.executeQuery();
   			while (rs.next()) {
   			
   			int ingredMealId= rs.getInt(1);
   			long ingredId = rs.getLong(2);
   			String ingredient = rs.getString(3);
   			String quantity = rs.getString(4);
   			String unitOfMeasure = rs.getString(5);
   			
   			EzMenuMealIngredient mealIngredient = new EzMenuMealIngredient(ingredMealId,ingredId,ingredient,quantity,
   					unitOfMeasure);
   			mealIngredientList.add(mealIngredient);				
   			}
   			rs.close();
   			db.reset(conn);
			} catch (SQLException | NoPreferenceException ex) {
				RunDMLException rdex = new RunDMLException(ex);
				ExceptionMessageDialogUtility.openExceptionMessageDialog(rdex);
				logger.error(ex.getMessage(), ex);
				throw rdex;
			}
			
			return mealIngredientList;

	}

	@Override
	public void insert(ITable table) throws RunDMLException {

		int 	returnCode = 0;
		EzMenuMealIngredient ingredient = null;
		
		if (table instanceof EzMenuMealIngredient) {
			ingredient = (EzMenuMealIngredient) table;
		}
		
		final String INSERT_INGREDIENT = "insert into ezmenu.ingredients"   			+
				"(meal_id, ingred_id, ingredient, quantity, unit_of_measure)"	+
				"values"														+
				"(?,DEFAULT,?,?,?)";

			try {
			      Connection conn = db.getConnection();
   				db.setSQL(conn,INSERT_INGREDIENT);
   				
   				db.setInt(1,ingredient.getMealId());
   				db.setString(2,ingredient.getIngredient());
   				db.setString(3,ingredient.getQuantity());
   				db.setString(4, ingredient.getUnitOfMeasure());
   				
   				AutoGeneratedKeysResult keysResult = db.executeUpdate(true);
   				AutoGeneratedKeysList keysList = keysResult.getAutoGeneratedKeys();
   				if (keysList.size() > 1) {
   					throw new RunDMLException("Auto Generated Keys list > 1");
   				}				
   				returnCode = keysResult.getReturnCode();
   				
   				if (returnCode > 1) {
   					logger.debug("Ingredient= " + ingredient+ "inserted into database.");
   				}
   				db.reset(conn);

			} catch (SQLException | NoPreferenceException ex) {
				RunDMLException rdex = new RunDMLException(ex);
				ExceptionMessageDialogUtility.openExceptionMessageDialog(rdex);
				logger.error(ex.getMessage(), ex);
				throw rdex;
			}
	}

	@Override
	public void update(ITable table) throws RunDMLException {
		int 	returnCode = 0;
		
		final String	UPDATE_INGREDIENT = "update ezmenu.ingredients "	+ 
											"set ingredient = ?, " 			+ 
											" quantity = ?, " 				+ 
											" unit_of_measure = ? "		 	+
											" where  meal_id = ? "			+ 
											" and ingred_id = ?"		
											;
		EzMenuMealIngredient ingredient = (EzMenuMealIngredient) table;

			try {
   				logger.debug("Update Meal Ingredient mealId= " + ingredient.getMealId() + " ingredient= " + ingredient.getIngredient());
   		      Connection conn = db.getConnection();
   				db.setSQL(conn,UPDATE_INGREDIENT);
   				
   				db.setString(1,ingredient.getIngredient());		
   				db.setString(2, ingredient.getQuantity());
   				db.setString(3, ingredient.getUnitOfMeasure());
   				db.setInt(4, ingredient.getMealId());
   				db.setLong(5, ingredient.getIngredientId());
   				returnCode = db.executeUpdate();				
   				if (returnCode > 1) {
   					logger.debug("Ingredient= " + ingredient + " update in database.");
   				}
   				db.reset(conn);

			} catch (SQLException | NoPreferenceException ex) {
				RunDMLException rdex = new RunDMLException(ex);
				ExceptionMessageDialogUtility.openExceptionMessageDialog(rdex);
				logger.error(ex.getMessage(), ex);
				throw rdex;
			}
		
	}

	@Override
	public void delete(ITable table) throws RunDMLException {
		int 	returnCode = 0;
		EzMenuMealIngredient ingredient = null;
		
		if (table instanceof EzMenuMealIngredient) {
			ingredient = (EzMenuMealIngredient) table;
		}
		
		final String DELETE_INGREDIENT = "delete from ezmenu.ingredients "
				+	"where meal_id = ? "
				;

			try {
   				logger.debug("Delete Meal Ingredient mealId= " + ingredient.getMealId() + " ingredient= " + ingredient.getIngredient());
   		      Connection conn = db.getConnection();
   				db.setSQL(conn,DELETE_INGREDIENT);
   				
   				db.setInt(1,ingredient.getMealId());			
   				returnCode = db.executeUpdate();				
   				if (returnCode > 1) {
   					logger.debug("Ingredient= " + ingredient + " deleted from database.");
   				}
   				db.reset(conn);

			} catch (SQLException | NoPreferenceException ex) {
				RunDMLException rdex = new RunDMLException(ex);
				ExceptionMessageDialogUtility.openExceptionMessageDialog(rdex);
				logger.error(ex.getMessage(), ex);
				throw rdex;
			}

	}
		
	public void deleteByMealIdIngredientName(EzMenuMealIngredient ingredient) throws RunDMLException {

		int 	returnCode = 0;
		
		final String	DELETE_BYMEALID_INGREDNAME = "delete from ezmenu.ingredients "		+
				 "where meal_id = ? "					+
				 "and ingred_id = ? "
				 ;

			try {
				logger.debug("Delete Meal Ingredient mealId= " + ingredient.getMealId() + " ingredient= " + ingredient.getIngredient());
		      Connection conn = db.getConnection();
				db.setSQL(conn,DELETE_BYMEALID_INGREDNAME);
				
				db.setInt(1,ingredient.getMealId());		
				db.setLong(2, ingredient.getIngredientId());
				returnCode = db.executeUpdate();				
				if (returnCode > 1) {
					logger.debug("Ingredient= " + ingredient + " deleted from database.");
				}
				db.reset(conn);

			} catch (SQLException | NoPreferenceException ex) {
				RunDMLException rdex = new RunDMLException(ex);
				ExceptionMessageDialogUtility.openExceptionMessageDialog(rdex);
				logger.error(ex.getMessage(), ex);
				throw rdex;
			}

	}
	
	
	public boolean checkIngredientExists(EzMenuMealIngredient ingredient) throws RunDMLException {
		
		boolean ingredientExists = false;
		final String CHECK_INGREDIENT_EXIST = 	"Select top 1 meal_id, ingredient "		+
												"from ezmenu.ingredients "				+
												"where meal_id = ? "					+
												"and ingred_id = ?"
												;

		try {
            Connection conn = db.getConnection();
   			db.setSQL(conn,CHECK_INGREDIENT_EXIST);
   			db.setInt(1, ingredient.getMealId());
   			db.setLong(2, ingredient.getIngredientId());
   			ResultSet rs = db.executeQuery();
   			if (rs.next()) {
   				ingredientExists = true;
   			}
   			db.reset(conn);
		} catch (SQLException | NoPreferenceException ex) {
			logger.error(ex.getMessage(),ex);
		}
		return ingredientExists;
	}

}
